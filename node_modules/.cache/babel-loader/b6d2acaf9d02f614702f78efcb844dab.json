{"ast":null,"code":"import _classCallCheck from\"/Users/zhengxinyue/PhpstormProjects/around-web2/around-web/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/zhengxinyue/PhpstormProjects/around-web2/around-web/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/zhengxinyue/PhpstormProjects/around-web2/around-web/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/zhengxinyue/PhpstormProjects/around-web2/around-web/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Users/zhengxinyue/PhpstormProjects/around-web2/around-web/node_modules/@babel/runtime/helpers/esm/inherits\";import React from'react';import{Form,Icon,Input,Button,message}from'antd';import{Link}from'react-router-dom';import{API_ROOT}from'../constants';var NormalLoginForm=/*#__PURE__*/function(_React$Component){_inherits(NormalLoginForm,_React$Component);function NormalLoginForm(){var _getPrototypeOf2;var _this;_classCallCheck(this,NormalLoginForm);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_possibleConstructorReturn(this,(_getPrototypeOf2=_getPrototypeOf(NormalLoginForm)).call.apply(_getPrototypeOf2,[this].concat(args)));_this.handleSubmit=function(e){e.preventDefault();_this.props.form.validateFields(function(err,values){if(!err){console.log('Received values of form: ',values);fetch(\"\".concat(API_ROOT,\"/login\"),{method:'POST',body:JSON.stringify({username:values.username,password:values.password})}).then(function(response){if(response.ok){return response.text();}throw new Error(response.stateText);}).then(function(data){console.log(data);_this.props.handleLoginSucceed(data);message.success('Login succeed!');}).catch(function(err){console.error(err);message.error('Login failed.');});}});};return _this;}_createClass(NormalLoginForm,[{key:\"render\",value:function render(){var getFieldDecorator=this.props.form.getFieldDecorator;return React.createElement(Form,{onSubmit:this.handleSubmit,className:\"login-form\"},React.createElement(Form.Item,null,getFieldDecorator('username',{rules:[{required:true,message:'Please input your username!'}]})(React.createElement(Input,{prefix:React.createElement(Icon,{type:\"user\",style:{color:'rgba(0,0,0,.25)'}}),placeholder:\"Username\"}))),React.createElement(Form.Item,null,getFieldDecorator('password',{rules:[{required:true,message:'Please input your Password!'}]})(React.createElement(Input,{prefix:React.createElement(Icon,{type:\"lock\",style:{color:'rgba(0,0,0,.25)'}}),type:\"password\",placeholder:\"Password\"}))),React.createElement(Form.Item,null,React.createElement(Button,{type:\"primary\",htmlType:\"submit\",className:\"login-form-button\"},\"Log in\"),\"Or \",React.createElement(Link,{to:\"/register\"},\"register now!\")));}}]);return NormalLoginForm;}(React.Component);export var Login=Form.create({name:'normal_login'})(NormalLoginForm);","map":{"version":3,"sources":["/Users/zhengxinyue/PhpstormProjects/around-web2/around-web/src/components/Login.js"],"names":["React","Form","Icon","Input","Button","message","Link","API_ROOT","NormalLoginForm","handleSubmit","e","preventDefault","props","form","validateFields","err","values","console","log","fetch","method","body","JSON","stringify","username","password","then","response","ok","text","Error","stateText","data","handleLoginSucceed","success","catch","error","getFieldDecorator","rules","required","color","Component","Login","create","name"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Form, Icon, Input, Button, message } from 'antd';\nimport { Link } from 'react-router-dom';\nimport { API_ROOT } from '../constants';\n\nclass NormalLoginForm extends React.Component {\n    handleSubmit = e => {\n        e.preventDefault();\n        this.props.form.validateFields((err, values) => {\n            if (!err) {\n                console.log('Received values of form: ', values);\n                fetch(`${API_ROOT}/login`, {\n                    method: 'POST',\n                    body: JSON.stringify({\n                        username: values.username,\n                        password: values.password,\n                    }),\n                })\n                    .then((response) => {\n                        if (response.ok) {\n                            return response.text();\n                        }\n                        throw new Error(response.stateText);\n                    })\n                    .then((data) => {\n                        console.log(data);\n                        this.props.handleLoginSucceed(data);\n                        message.success('Login succeed!');\n                    })\n                    .catch((err) => {\n                        console.error(err);\n                        message.error('Login failed.');\n                    });\n            }\n        });\n    };\n\n    render() {\n        const { getFieldDecorator } = this.props.form;\n        return (\n            <Form onSubmit={this.handleSubmit} className=\"login-form\">\n                <Form.Item>\n                    {getFieldDecorator('username', {\n                        rules: [{ required: true, message: 'Please input your username!' }],\n                    })(\n                        <Input\n                            prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                            placeholder=\"Username\"\n                        />,\n                    )}\n                </Form.Item>\n                <Form.Item>\n                    {getFieldDecorator('password', {\n                        rules: [{ required: true, message: 'Please input your Password!' }],\n                    })(\n                        <Input\n                            prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                            type=\"password\"\n                            placeholder=\"Password\"\n                        />,\n                    )}\n                </Form.Item>\n                <Form.Item>\n                    <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\n                        Log in\n                    </Button>\n                    Or <Link to=\"/register\">register now!</Link>\n                </Form.Item>\n            </Form>\n        );\n    }\n}\n\nexport const Login = Form.create({ name: 'normal_login' })(NormalLoginForm);"]},"metadata":{},"sourceType":"module"}