{"ast":null,"code":"var _jsxFileName = \"/Users/zhengxinyue/PhpstormProjects/around-web2/around-web/src/components/CreatePostButton.js\";\nimport React from 'react';\nimport { Modal, Button, message } from 'antd';\nimport { CreatePostForm } from './CreatePostForm';\nimport { API_ROOT, AUTH_HEADER, TOKEN_KEY, POS_KEY, LOC_SHAKE, TOPIC_AROUND } from '../constants';\nexport class CreatePostButton extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      visible: false,\n      confirmLoading: false\n    };\n\n    this.showModal = () => {\n      this.setState({\n        visible: true\n      });\n    };\n\n    this.handleOk = () => {\n      this.form.validateFields((err, values) => {\n        console.log(values);\n\n        if (!err) {\n          const token = localStorage.getItem(TOKEN_KEY);\n\n          const _JSON$parse = JSON.parse(localStorage.getItem(POS_KEY)),\n                lat = _JSON$parse.lat,\n                lon = _JSON$parse.lon;\n\n          const formData = new FormData();\n          formData.set('lat', lat + Math.random() * LOC_SHAKE * 2 - LOC_SHAKE);\n          formData.set('lon', lon + Math.random() * LOC_SHAKE * 2 - LOC_SHAKE);\n          formData.set('message', values.message);\n          formData.set('image', values.image[0].originFileObj);\n          this.setState({\n            confirmLoading: true\n          });\n          fetch(`${API_ROOT}/post`, {\n            method: 'POST',\n            headers: {\n              Authorization: `${AUTH_HEADER} ${token}`\n            },\n            body: formData\n          }).then(response => {\n            if (response.ok) {\n              return this.props.loadPostsByTopic();\n            }\n\n            throw new Error('Failed to create post.');\n          }).then(() => {\n            this.setState({\n              visible: false,\n              confirmLoading: false\n            });\n            this.form.resetFields();\n            message.success('Post created successfully!');\n          }).catch(e => {\n            console.error(e);\n            message.error('Failed to create post.');\n            this.setState({\n              confirmLoading: false\n            });\n          });\n        }\n      });\n    };\n\n    this.handleCancel = () => {\n      console.log('Clicked cancel button');\n      this.setState({\n        visible: false\n      });\n    };\n\n    this.getFormRef = formInstance => {\n      this.form = formInstance;\n    };\n  }\n\n  render() {\n    const _this$state = this.state,\n          visible = _this$state.visible,\n          confirmLoading = _this$state.confirmLoading;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"primary\",\n      onClick: this.showModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"Create New Post\"), React.createElement(Modal, {\n      title: \"Create New Post\",\n      visible: visible,\n      onOk: this.handleOk,\n      okText: \"Create\",\n      confirmLoading: confirmLoading,\n      onCancel: this.handleCancel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(CreatePostForm, {\n      ref: this.getFormRef,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    })));\n  }\n\n}","map":{"version":3,"sources":["/Users/zhengxinyue/PhpstormProjects/around-web2/around-web/src/components/CreatePostButton.js"],"names":["React","Modal","Button","message","CreatePostForm","API_ROOT","AUTH_HEADER","TOKEN_KEY","POS_KEY","LOC_SHAKE","TOPIC_AROUND","CreatePostButton","Component","state","visible","confirmLoading","showModal","setState","handleOk","form","validateFields","err","values","console","log","token","localStorage","getItem","JSON","parse","lat","lon","formData","FormData","set","Math","random","image","originFileObj","fetch","method","headers","Authorization","body","then","response","ok","props","loadPostsByTopic","Error","resetFields","success","catch","e","error","handleCancel","getFormRef","formInstance","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Modal, Button, message } from 'antd';\nimport { CreatePostForm } from './CreatePostForm';\nimport { API_ROOT, AUTH_HEADER, TOKEN_KEY, POS_KEY, LOC_SHAKE, TOPIC_AROUND } from '../constants';\n\nexport class CreatePostButton extends React.Component {\n    state = {\n        visible: false,\n        confirmLoading: false,\n    };\n\n    showModal = () => {\n        this.setState({\n            visible: true,\n        });\n    };\n\n    handleOk = () => {\n        this.form.validateFields((err, values) => {\n            console.log(values);\n            if (!err) {\n                const token = localStorage.getItem(TOKEN_KEY);\n                const { lat, lon } = JSON.parse(localStorage.getItem(POS_KEY));\n\n                const formData = new FormData();\n                formData.set('lat', lat + Math.random() * LOC_SHAKE * 2 - LOC_SHAKE);\n                formData.set('lon', lon + Math.random() * LOC_SHAKE * 2 - LOC_SHAKE);\n                formData.set('message', values.message);\n                formData.set('image', values.image[0].originFileObj);\n\n                this.setState({ confirmLoading: true });\n                fetch(`${API_ROOT}/post`, {\n                    method: 'POST',\n                    headers: {\n                        Authorization: `${AUTH_HEADER} ${token}`\n                    },\n                    body: formData,\n                })\n                    .then((response) => {\n                        if (response.ok) {\n                            return this.props.loadPostsByTopic();\n                        }\n                        throw new Error('Failed to create post.');\n                    })\n                    .then(() => {\n                        this.setState({ visible: false, confirmLoading: false });\n                        this.form.resetFields();\n                        message.success('Post created successfully!');\n                    })\n                    .catch((e) => {\n                        console.error(e);\n                        message.error('Failed to create post.');\n                        this.setState({ confirmLoading: false });\n                    });\n            }\n        });\n    };\n\n    handleCancel = () => {\n        console.log('Clicked cancel button');\n        this.setState({\n            visible: false,\n        });\n    };\n\n    getFormRef = (formInstance) => {\n        this.form = formInstance;\n    }\n\n    render() {\n        const { visible, confirmLoading } = this.state;\n        return (\n            <div>\n                <Button type=\"primary\" onClick={this.showModal}>\n                    Create New Post\n                </Button>\n                <Modal\n                    title=\"Create New Post\"\n                    visible={visible}\n                    onOk={this.handleOk}\n                    okText='Create'\n                    confirmLoading={confirmLoading}\n                    onCancel={this.handleCancel}\n                >\n                    <CreatePostForm ref={this.getFormRef}/>\n                </Modal>\n            </div>\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}